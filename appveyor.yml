notifications:
  - provider: Webhook
    url: https://webhook.commit-email.info/

version: "{build}"
clone_depth: 10

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VS_VERSION: 15
      ARCH: amd64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VS_VERSION: 14
      ARCH: amd64
    - VS_VERSION: 12
      ARCH: amd64
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VS_VERSION: 15
      ARCH: x86
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VS_VERSION: 14
      ARCH: x86
    - VS_VERSION: 12
      ARCH: x86

# matrix:
#   allow_failures:
#     - VS_VERSION: 12
#       ARCH: x86

init:
  - ps: Set-WinSystemLocale ja-JP
  - ps: Start-Sleep -s 10
  - ps: Restart-Computer

install:
  - set PATH=C:\Ruby25-x64\bin;%PATH%
  - set PATH=C:\msys64\usr\bin;%PATH%
  - choco install -y curl 7zip.commandline
  - if "%VS_VERSION%" == "15" if "%ARCH%" == "x86" set VS2017_X86=TRUE
  - if "%VS_VERSION%" == "15" if "%ARCH%" == "amd64" set VS2017_AMD64=TRUE
  - if "%VS2017_X86%" == "TRUE"
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - if "%VS2017_AMD64%" == "TRUE"
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if not "%VS_VERSION%" == "15"
      call
      "C:\Program Files (x86)\Microsoft Visual Studio %VS_VERSION%.0\VC\vcvarsall.bat"
      %ARCH%
  # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - tzutil /s "Tokyo Standard Time"
  # - choco install -y imdisk-toolkit
  # - mkdir tmp
  # - imdisk -a -t file -m tmp -o awe -s 1G -p "/fs:ntfs /q /y"
  - set GROONGA_INSTALL_SUB_FOLDER=インストール
  #- set GROONGA_INSTALL_SUB_FOLDER=install
  - ps: |
      $Env:GROONGA_VERSION = (Get-Content base_version)
      if ($Env:APPVEYOR_REPO_TAG -eq "false") {
        $Env:GROONGA_VERSION += "-" + $Env:APPVEYOR_REPO_COMMIT.Substring(0, 7)
      }
      $Env:GROONGA_INSTALL_FOLDER = "groonga-" + $Env:GROONGA_VERSION
      if ($Env:ARCH -eq "x86") {
        $Env:GROONGA_INSTALL_FOLDER += "-x86"
      } else {
        $Env:GROONGA_INSTALL_FOLDER += "-x64"
      }
      "GRN_VERSION=" + $Env:GROONGA_VERSION | Set-Content version.sh
      $Env:FULL_GROONGA_INSTALL_FOLDER = $Env:APPVEYOR_BUILD_FOLDER + "\" + $Env:GROONGA_INSTALL_SUB_FOLDER + "\" + $Env:GROONGA_INSTALL_FOLDER
  - curl -O http://packages.groonga.org/source/groonga-normalizer-mysql/groonga-normalizer-mysql-latest.zip
  - 7z x groonga-normalizer-mysql-latest.zip
  - del groonga-normalizer-mysql-latest.zip
  - move groonga-normalizer-mysql* vendor\plugins\groonga-normalizer-mysql

build_script:
  - git submodule update --init
  - cd vendor
  - ruby download_mecab.rb
  - ruby download_message_pack.rb
  - ruby download_lz4.rb
  - cd ..
  - set CMAKE_GENERATOR_NAME=Visual Studio %VS_VERSION%
  - if "%VS_VERSION%" == "12"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% 2013
  - if "%VS_VERSION%" == "14"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% 2015
  - if "%VS_VERSION%" == "15"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% 2017
  - if "%ARCH%" == "amd64"
      set CMAKE_GENERATOR_NAME=%CMAKE_GENERATOR_NAME% Win64
  - cmake . -G "%CMAKE_GENERATOR_NAME%"
      -DCMAKE_INSTALL_PREFIX=%FULL_GROONGA_INSTALL_FOLDER%
      -DGRN_WITH_MRUBY=yes
  - set CMAKE_BUILD_PARALLEL_LEVEL=4
  - cmake --build . --config RelWithDebInfo
  - cmake --build . --config RelWithDebInfo --target Install
  - move %FULL_GROONGA_INSTALL_FOLDER%\share\groonga\html\admin %FULL_GROONGA_INSTALL_FOLDER%\share\groonga\html\admin.old
  - curl -O http://packages.groonga.org/source/groonga-admin/groonga-admin.tar.gz
  - 7z x groonga-admin.tar.gz
  - 7z x groonga-admin.tar
  - cd groonga-admin-*
  - move html %FULL_GROONGA_INSTALL_FOLDER%\share\groonga\html\admin
  # Install groonga-admin license files
  - mkdir %FULL_GROONGA_INSTALL_FOLDER%\share\groonga\groonga-admin
  - for %%i in ( LICENSE README.md ) do ( copy %%i %FULL_GROONGA_INSTALL_FOLDER%\share\groonga\groonga-admin\ )
  # Install msgpack license files
  - cd %APPVEYOR_BUILD_FOLDER%\vendor\msgpack-*
  - copy NOTICE %FULL_GROONGA_INSTALL_FOLDER%\share\groonga\msgpack\
  - cd %APPVEYOR_BUILD_FOLDER%

before_test:
  - git clone --depth 1
      https://github.com/groonga/grntest.git
      test\command\grntest
  - cd test\command\grntest
  - bundle install --binstubs=..\bin
  - cd ..\..\..
  - del test\command\suite\select\filter\equal\vector_element_float.test
test_script:
  - set GRN_EXPR_OPTIMIZE=yes
  - ruby test\command\bin\grntest
     --groonga %FULL_GROONGA_INSTALL_FOLDER%\bin\groonga.exe
     --base-directory test\command
     --reporter mark
     --n-workers 2
     --timeout 60
     --read-timeout 30
     --n-retries 2
     test\command\suite
  # On Appveyor, インストール directory is recognized unicode escape sequence.
  - set GROONGA_INSTALL_SUB_FOLDER_ESCAPED=\u7E67\uFF64\u7E5D\uFF73\u7E67\uFF79\u7E5D\u533B\u30FB\u7E5D\uFF6B
  - ruby test\command_line\run-test.rb
     --groonga-install-prefix=%APPVEYOR_BUILD_FOLDER%\\%GROONGA_INSTALL_SUB_FOLDER_ESCAPED%\\%GROONGA_INSTALL_FOLDER%

on_success:
  - cd %GROONGA_INSTALL_SUB_FOLDER%
  - set ARTIFACT=%GROONGA_INSTALL_FOLDER%.zip
  - 7z a %ARTIFACT% %FULL_GROONGA_INSTALL_FOLDER%
  - ps: Push-AppveyorArtifact $Env:ARTIFACT
  - mkdir %FULL_GROONGA_INSTALL_FOLDER%\share\groonga\vcruntime
  - if "%ARCH%" == "amd64" set ARCH=x64
  - ps: |
      switch -Exact ($Env:VS_VERSION) {
        "15" {
          $Env:REDIST_VERSION = (Get-Content "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\Microsoft.VCRedistVersion.default.txt")
          $Env:VCREDIST_DIR = "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\$Env:REDIST_VERSION\$Env:ARCH"
          $Env:VCREDIST_VCRUNTIME = "$Env:VCREDIST_DIR\Microsoft.VC141.CRT\vcruntime140.dll"
          $Env:VCREDIST_MSVCP = "$Env:VCREDIST_DIR\Microsoft.VC141.CRT\msvcp140.dll"
          $Env:LICENSE_FILE = $Env:APPVEYOR_BUILD_FOLDER + "\packages\windows\vcruntime\vs2017\readme.txt"
          $Env:UCRT_REDIST_DIR = "C:\Program Files (x86)\Windows Kits\10\Redist\ucrt\DLLs\$Env:ARCH"
          $Env:UCRT_LICENSE_FILE = $Env:APPVEYOR_BUILD_FOLDER + "\packages\windows\vcruntime\ucrt-readme.txt"
        }
        "14" {
          $Env:VCREDIST_DIR = "C:\Program Files (x86)\Microsoft Visual Studio $Env:VS_VERSION.0\VC\redist\$Env:ARCH"
          $Env:VCREDIST_VCRUNTIME = "$Env:VCREDIST_DIR\Microsoft.VC140.CRT\vcruntime140.dll"
          $Env:VCREDIST_MSVCP = "$Env:VCREDIST_DIR\Microsoft.VC140.CRT\msvcp140.dll"
          $Env:LICENSE_FILE = $Env:APPVEYOR_BUILD_FOLDER + "\packages\windows\vcruntime\vs2015\readme.txt"
          $Env:UCRT_REDIST_DIR = "C:\Program Files (x86)\Windows Kits\10\Redist\ucrt\DLLs\$Env:ARCH"
          $Env:UCRT_LICENSE_FILE = $Env:APPVEYOR_BUILD_FOLDER + "\packages\windows\vcruntime\ucrt-readme.txt"
        }
        "12" {
          $Env:VCREDIST_DIR = "C:\Program Files (x86)\Microsoft Visual Studio $Env:VS_VERSION.0\VC\redist\$Env:ARCH"
          $Env:VCREDIST_VCRUNTIME = "$Env:VCREDIST_DIR\Microsoft.VC120.CRT\msvcr120.dll"
          $Env:VCREDIST_MSVCP = "$Env:VCREDIST_DIR\Microsoft.VC120.CRT\msvcp120.dll"
          $Env:LICENSE_FILE = $Env:APPVEYOR_BUILD_FOLDER + "\packages\windows\vcruntime\vs2013\readme.txt"
        }
      }
  - copy "%VCREDIST_VCRUNTIME%" "%FULL_GROONGA_INSTALL_FOLDER%\bin"
  - copy "%VCREDIST_MSVCP%" "%FULL_GROONGA_INSTALL_FOLDER%\bin"
  - copy "%LICENSE_FILE%" "%FULL_GROONGA_INSTALL_FOLDER%\share\groonga\vcruntime"
  - ps: |
      if ($Env:UCRT_REDIST_DIR -ne "") {
        Copy-Item $Env:UCRT_REDIST_DIR\*.dll -Destination $Env:FULL_GROONGA_INSTALL_FOLDER\bin\
        Copy-Item $Env:UCRT_LICENSE_FILE -Destination $Env:FULL_GROONGA_INSTALL_FOLDER\share\groonga\vcruntime\
      }
  - set ARTIFACT=%GROONGA_INSTALL_FOLDER%-with-vcruntime.zip
  - 7z a %ARTIFACT% %FULL_GROONGA_INSTALL_FOLDER%
  - ps: Push-AppveyorArtifact $Env:ARTIFACT
  - cd ..
