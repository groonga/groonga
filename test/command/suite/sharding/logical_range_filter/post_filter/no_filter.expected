plugin_register sharding
[[0,0.0,0.0],true]
table_create Logs_20170315 TABLE_NO_KEY
[[0,0.0,0.0],true]
column_create Logs_20170315 timestamp COLUMN_SCALAR Time
[[0,0.0,0.0],true]
column_create Logs_20170315 price COLUMN_SCALAR UInt32
[[0,0.0,0.0],true]
table_create Logs_20170316 TABLE_NO_KEY
[[0,0.0,0.0],true]
column_create Logs_20170316 timestamp COLUMN_SCALAR Time
[[0,0.0,0.0],true]
column_create Logs_20170316 price COLUMN_SCALAR UInt32
[[0,0.0,0.0],true]
table_create Logs_20170317 TABLE_NO_KEY
[[0,0.0,0.0],true]
column_create Logs_20170317 timestamp COLUMN_SCALAR Time
[[0,0.0,0.0],true]
column_create Logs_20170317 price COLUMN_SCALAR UInt32
[[0,0.0,0.0],true]
load --table Logs_20170315
[
{"timestamp": "2017/03/15 00:00:00", "price": 1000},
{"timestamp": "2017/03/15 01:00:00", "price":  900},
{"timestamp": "2017/03/15 02:00:00", "price":  300}
]
[[0,0.0,0.0],3]
load --table Logs_20170316
[
{"timestamp": "2017/03/16 10:00:00", "price":  530},
{"timestamp": "2017/03/16 11:00:00", "price":  520},
{"timestamp": "2017/03/16 12:00:00", "price":  110}
]
[[0,0.0,0.0],3]
load --table Logs_20170317
[
{"timestamp": "2017/03/17 20:00:00", "price":  800},
{"timestamp": "2017/03/17 21:00:00", "price":  400},
{"timestamp": "2017/03/17 22:00:00", "price":  300}
]
[[0,0.0,0.0],3]
table_create Times TABLE_PAT_KEY Time
[[0,0.0,0.0],true]
column_create Times logs_20170315 COLUMN_INDEX Logs_20170315 timestamp
[[0,0.0,0.0],true]
column_create Times logs_20170316 COLUMN_INDEX Logs_20170316 timestamp
[[0,0.0,0.0],true]
column_create Times logs_20170317 COLUMN_INDEX Logs_20170317 timestamp
[[0,0.0,0.0],true]
log_level --level debug
[[0,0.0,0.0],true]
logical_range_filter Logs   --shard_key timestamp   --post_filter '_id < 3'   --offset 4   --limit 1   --output_columns _id,price
[[0,0.0,0.0],[[["_id","UInt32"],["price","UInt32"]],[1,800]]]
#|d| [logical_range_filter][select] <Logs_20170315>: post_filter is used
#|d| [logical_range_filter][select] <Logs_20170316>: post_filter is used
#|d| [logical_range_filter][select] <Logs_20170317>: post_filter is used
#>logical_range_filter --limit "1" --logical_table "Logs" --offset "4" --output_columns "_id,price" --post_filter "_id < 3" --shard_key "timestamp"
#:000000000000000 filter(2): #<accessor _id(Logs_20170315)> less 3
#:000000000000000 filter(2): #<accessor _id(Logs_20170316)> less 3
#:000000000000000 filter(2): #<accessor _id(Logs_20170317)> less 3
#:000000000000000 sort(1)[Logs_20170317]: timestamp
#:000000000000000 output(1)
#<000000000000000 rc=0
log_level --level notice
[[0,0.0,0.0],true]
