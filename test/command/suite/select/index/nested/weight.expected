table_create Comments TABLE_HASH_KEY UInt32
[[0,0.0,0.0],true]
column_create Comments content COLUMN_SCALAR ShortText
[[0,0.0,0.0],true]
table_create Articles TABLE_NO_KEY
[[0,0.0,0.0],true]
column_create Articles content COLUMN_SCALAR Text
[[0,0.0,0.0],true]
column_create Articles comment COLUMN_SCALAR Comments
[[0,0.0,0.0],true]
table_create Lexicon TABLE_PAT_KEY|KEY_NORMALIZE ShortText   --default_tokenizer TokenBigram
[[0,0.0,0.0],true]
column_create Lexicon articles_content COLUMN_INDEX|WITH_POSITION   Articles content
[[0,0.0,0.0],true]
column_create Lexicon comments_content COLUMN_INDEX|WITH_POSITION   Comments content
[[0,0.0,0.0],true]
column_create Comments article COLUMN_INDEX Articles comment
[[0,0.0,0.0],true]
load --table Comments
[
{"_key": 1, "content": "I'm using groonga too!"},
{"_key": 2, "content": "I'm using groonga and mroonga!"},
{"_key": 3, "content": "I'm using mroonga too!"}
]
[[0,0.0,0.0],3]
load --table Articles
[
{"content": "Groonga is fast!", "comment": 1},
{"content": "Groonga is useful!"},
{"content": "Mroonga is fast!", "comment": 3}
]
[[0,0.0,0.0],3]
select Articles   --match_columns 'comment.content * 10' --query groonga   --output_columns "_id, _score, *"
[
  [
    0,
    0.0,
    0.0
  ],
  [
    [
      [
        1
      ],
      [
        [
          "_id",
          "UInt32"
        ],
        [
          "_score",
          "Int32"
        ],
        [
          "comment",
          "Comments"
        ],
        [
          "content",
          "Text"
        ]
      ],
      [
        1,
        10,
        1,
        "Groonga is fast!"
      ]
    ]
  ]
]
